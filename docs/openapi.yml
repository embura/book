openapi: 3.0.0
info:
  title: Book API
  version: 1.0.0
  description: Este repositório contém a definição Swagger (OpenAPI) para uma API de Book. 
    A API permite gerenciar uma coleção de livros, incluindo criar, recuperar, atualizar e 
    excluir registros de livros. Além disso, oferece suporte à capacidade de alugar um livro 
    para um usuário.
  
paths:
  /api/private/v1/book:
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Book created successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /api/private/v1/book/{bookId}:
    get:
      summary: Get book by ID
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book details retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: Book not found
    put:
      summary: Update book by ID
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Book updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Book not found
    delete:
      summary: Delete book by ID
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Book not found
  /api/private/v1/book/{bookId}/rent:
    post:
      summary: Rent a book
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: Book rented successfully
        '401':
          description: Unauthorized
        '404':
          description: Book not found
components:
  schemas:
    BookInput:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        gender:
          type: string
        hasAudio:
          type: boolean
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
